/**
Thank you 
https://codepen.io/Mamboleoo/pen/BxMQYQ
*/

$particleSize: 20vmin;
$animationDuration: 6s;
$amount: 20;

.background span {
  width: $particleSize;
  height: $particleSize;
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  $colors: (var(--color-one), var(--color-two), var(--color-three));
  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: nth($colors, random(length($colors)));
      top: random(100) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}

h1 span {
  width: $particleSize / 6 * 10;
  height: $particleSize / 6 * 10;
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  opacity: .8;
  // mix-blend-mode: multiply;
  // $colors: (var(--color-one), var(--color-two), var(--color-three));

  @for $i from 1 through $amount * 7 {
    &:nth-child(#{$i}) {
      background-color: var(--color-bg);
      // background-color:  nth($colors, random(length($colors)));
      
      // background-color: red;
      top: random(100) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      // box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;

      /* From https://css.glass */
      // background: rgba(255, 255, 255, 0.2);
      // border-radius: 16px;
      // box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(0.3rem);
      -webkit-backdrop-filter: blur(0.3rem);

      mask-image: radial-gradient(
        circle closest-side,
        rgba(0, 0, 0, 1) 70%,
        rgba(0, 0, 0, .5) 80%,
        transparent
      );
      -webkit-mask-image: radial-gradient(
        circle closest-side,
        rgba(0, 0, 0, 1) 70%,
        rgba(0, 0, 0, .5) 80%,
        transparent
      );
    }
  }
}
